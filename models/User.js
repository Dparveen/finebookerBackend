/////models is use for define schema model
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const UserSchema = new mongoose.Schema({
    username: { type: String, unique: true, required: true },
    fullname: { type: String,  },
	hash: { type: String, required: true },
	hash_new: { type: String },
	isOnline:{type:String, default: 'N'},
    //email: { type: String, unique: true, required: true },
	//emailVerify: { type: String, enum: ['Y','N'], default: 'N' },
    city: { type: String, },
    phone: { type: String},
	userType: { type: Number, required: true },
    parentid: { type: String,default: "" }, 
	verifyCode: { type: String, required: true },
	email:{type:String},
	address:{type:String},
	creditAmount: { type: Number, default: 0},
	exposerAmount: { type: Number, default: 0},
	cricket_commission_upline: { type: Number, required: true, default: 0},
	cricket_commission_downline: { type: Number, required: true , default: 0},
	cricket_commission_own: { type: Number, required: true , default: 0},
	football_commission_upline: { type: Number, required: true, default: 0 },
	football_commission_downline: { type: Number, required: true , default: 0},
	football_commission_own: { type: Number, required: true , default: 0},
	tennis_commission_upline: { type: Number, required: true , default: 0},
	tennis_commission_downline: { type: Number, required: true , default: 0},
	tennis_commission_own: { type: Number, required: true, default: 0 },
	cricket_partnership_upline: { type: Number, required: true, default: 0 },
	cricket_partnership_downline: { type: Number, required: true , default: 0},
	cricket_partnership_own: { type: Number, required: true , default: 0},
	football_partnership_upline: { type: Number, required: true , default: 0},
	football_partnership_downline: { type: Number, required: true , default: 0},
	football_partnership_own: { type: Number, required: true, default: 0 },
	tennis_partnership_upline: { type: Number, required: true, default: 0 },
	tennis_partnership_downline: { type: Number, required: true , default: 0},
	tennis_partnership_own: { type: Number, required: true , default: 0},
	cricket_min_bet: { type: Number, required: true , default: 0},
	cricket_max_bet: { type: Number, required: true , default: 0},
	cricket_delay: { type: Number, required: true , default: 0},
	football_min_bet: { type: Number, required: true, default: 0 },
	football_max_bet: { type: Number, required: true , default: 0},
	football_delay: { type: Number, required: true , default: 0},
	tennis_min_bet: { type: Number, required: true, default: 0 },
	tennis_max_bet: { type: Number, required: true, default: 0 },
	tennis_delay: { type: Number, required: true, default: 0},
	balance: { type: Number, required: true, default: 0 },
	profit_loss: { type: Number, required: true, default: 0 },
	user_status: { type: String, enum: ['Y','N'], default: 'Y' },
	bet_status: { type: String, enum: ['Y','N'], default: 'Y' },
    createdDate: { type: Date, default: Date.now },
    cricket: { type: String, enum: ['Y','N'], default: 'Y' },
    football: { type: String, enum: ['Y','N'], default: 'Y' },
    tennis: { type: String, enum: ['Y','N'], default: 'Y' } ,
	horse_riding: { type: String, enum: ['Y','N'], default: 'Y' },
	session_value: { type: Number, default: 0 },
	session_id: { type: String },
	qr_code_id:{ type: String },
	qr_code_on_off:{ type: String },
	qr_code_data:{ type: String },
	browser_name:{ type: String },
	version:{ type: String },
	os:{ type: String },
	ip_address:{ type: String },
}, { timestamps: true })

module.exports = mongoose.model("tbl_user", UserSchema);